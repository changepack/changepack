name: build
on: push
env:
  DATABASE_URL: postgresql://rails_github_actions:postgres@localhost:5432/changepack_test
  RAILS_ENV: test
  CI: true
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
jobs:
  verify:
    name: Build
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        env:
          REDIS_HOST: redis
          REDIS_PORT: 6379
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: rails_github_actions
          POSTGRES_DB: changepack_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev lsof
          gem install bundler
          bundle install --jobs 4 --retry 3
          cp config/application.yml.example config/application.yml
      - name: Run RuboCop
        run: bundle exec rubocop
      - name: Run Brakeman
        run: bundle exec brakeman
      - name: Run slim-lint
        run: bundle exec slim-lint app/views
      - name: Setup test database
        run: rails db:schema:load
      - name: Run RSpec
        run: bundle exec rspec
      - name: Compile assets
        run: rails assets:precompile
      - name: Run Cypress
        uses: cypress-io/github-action@v5
        env:
          CYPRESS: 1
        with:
          start: bundle exec rails server -e test -p 5017
          wait-on: 'http://localhost:5017'
          browser: chrome
          project: ./spec
          config-file: cypress.config.js
      - name: Kill Puma to generate Cypress coverage
        run: kill -2 `cat tmp/pids/server.pid`
      - name: Publish code coverage
        if: github.ref == 'refs/heads/main'
        uses: paambaati/codeclimate-action@v4.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: bundle exec rails coverage:report
          coverageLocations: ${{ github.workspace }}/coverage/coverage.json:simplecov
