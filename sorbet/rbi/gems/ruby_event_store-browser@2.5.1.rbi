# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ruby_event_store-browser` gem.
# Please instead update this file by running `bin/tapioca gem ruby_event_store-browser`.

# source://ruby_event_store-browser//lib/ruby_event_store/browser.rb#3
module RubyEventStore; end

# source://ruby_event_store-browser//lib/ruby_event_store/browser.rb#4
module RubyEventStore::Browser; end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#10
class RubyEventStore::Browser::App
  # @return [App] a new instance of App
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#59
  def initialize(event_store_locator:, related_streams_query:, host:, root_path:, api_url:); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#65
  def call(env); end

  private

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#111
  def bootstrap_html; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#136
  def erb(template, **locals); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#107
  def event_store; end

  # Returns the value of attribute event_store_locator.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#105
  def event_store_locator; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#132
  def json(body); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#128
  def not_found; end

  # Returns the value of attribute related_streams_query.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#105
  def related_streams_query; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#140
  def res_version; end

  # Returns the value of attribute routing.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#105
  def routing; end

  class << self
    # source://ruby_event_store-browser//lib/ruby_event_store/browser/app.rb#11
    def for(event_store_locator:, host: T.unsafe(nil), path: T.unsafe(nil), api_url: T.unsafe(nil), environment: T.unsafe(nil), related_streams_query: T.unsafe(nil)); end
  end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser.rb#7
RubyEventStore::Browser::DEFAULT_RELATED_STREAMS_QUERY = T.let(T.unsafe(nil), Proc)

# source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#5
class RubyEventStore::Browser::GetEvent
  # @return [GetEvent] a new instance of GetEvent
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#6
  def initialize(event_store:, event_id:); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#11
  def to_h; end

  private

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#19
  def event; end

  # Returns the value of attribute event_id.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#17
  def event_id; end

  # Returns the value of attribute event_store.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#17
  def event_store; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_event.rb#23
  def parent_event_id; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#5
class RubyEventStore::Browser::GetEventsFromStream
  # @return [GetEventsFromStream] a new instance of GetEventsFromStream
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#8
  def initialize(event_store:, routing:, stream_name:, page:); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#15
  def to_h; end

  private

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#93
  def count; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#97
  def direction; end

  # Returns the value of attribute event_store.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#21
  def event_store; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#23
  def events; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#55
  def events_backward(position); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#48
  def events_forward(position); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#85
  def first_page_link; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#89
  def last_page_link; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#33
  def links; end

  # @return [Boolean]
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#62
  def next_event?; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#76
  def next_page_link(event_id); end

  # Returns the value of attribute page.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#21
  def page; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#106
  def position; end

  # @return [Boolean]
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#67
  def prev_event?; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#72
  def prev_page_link(event_id); end

  # Returns the value of attribute routing.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#21
  def routing; end

  # Returns the value of attribute stream_name.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#21
  def stream_name; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/get_events_from_stream.rb#6
RubyEventStore::Browser::GetEventsFromStream::HEAD = T.let(T.unsafe(nil), Object)

# source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#3
class RubyEventStore::Browser::GetStream
  # @return [GetStream] a new instance of GetStream
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#4
  def initialize(routing:, stream_name:, related_streams_query:); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#10
  def to_h; end

  private

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#33
  def related_streams; end

  # Returns the value of attribute related_streams_query.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#31
  def related_streams_query; end

  # Returns the value of attribute routing.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#31
  def routing; end

  # Returns the value of attribute stream_name.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/get_stream.rb#31
  def stream_name; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#5
class RubyEventStore::Browser::JsonApiEvent
  # @return [JsonApiEvent] a new instance of JsonApiEvent
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#6
  def initialize(event, parent_event_id); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#11
  def to_h; end

  private

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#42
  def causation_stream_name; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#38
  def correlation_stream_name; end

  # Returns the value of attribute event.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#29
  def event; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#31
  def metadata; end

  # Returns the value of attribute parent_event_id.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#29
  def parent_event_id; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/json_api_event.rb#46
  def type_stream_name; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser.rb#5
RubyEventStore::Browser::PAGE_SIZE = T.let(T.unsafe(nil), Integer)

# source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#5
class RubyEventStore::Browser::Router
  # @return [Router] a new instance of Router
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#38
  def initialize(urls = T.unsafe(nil)); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#43
  def add_route(request_method, pattern, &block); end

  # @raise [NoMatch]
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#47
  def handle(request); end

  private

  # Returns the value of attribute routes.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#57
  def routes; end

  # Returns the value of attribute urls.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#57
  def urls; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#6
class RubyEventStore::Browser::Router::NoMatch < ::StandardError; end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#8
class RubyEventStore::Browser::Router::Route
  # @return [Route] a new instance of Route
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#12
  def initialize(request_method, pattern, &block); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#25
  def call(params, urls); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#18
  def match(request); end

  private

  # Returns the value of attribute handler.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#35
  def handler; end

  # Returns the value of attribute pattern.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#35
  def pattern; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#31
  def regexp; end

  # Returns the value of attribute request_method.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#35
  def request_method; end
end

# source://ruby_event_store-browser//lib/ruby_event_store/browser/router.rb#9
RubyEventStore::Browser::Router::Route::NAMED_SEGMENTS_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://ruby_event_store-browser//lib/ruby_event_store/browser.rb#6
RubyEventStore::Browser::SERIALIZED_GLOBAL_STREAM_NAME = T.let(T.unsafe(nil), String)

# source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#3
class RubyEventStore::Browser::Urls
  # @return [Urls] a new instance of Urls
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#18
  def initialize(host, root_path, api_url); end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#59
  def ==(o); end

  # Returns the value of attribute api_url.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#16
  def api_url; end

  # Returns the value of attribute app_url.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#16
  def app_url; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#55
  def bootstrap_js_url; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#51
  def browser_css_url; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#47
  def browser_js_url; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#25
  def events_url; end

  # Returns the value of attribute host.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#16
  def host; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#33
  def paginated_events_from_stream_url(id:, position: T.unsafe(nil), direction: T.unsafe(nil), count: T.unsafe(nil)); end

  # Returns the value of attribute root_path.
  #
  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#16
  def root_path; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#29
  def streams_url; end

  # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#12
  def with_request(request); end

  class << self
    # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#4
    def from_configuration(host, root_path, api_url = T.unsafe(nil)); end

    # source://ruby_event_store-browser//lib/ruby_event_store/browser/urls.rb#8
    def initial; end
  end
end

# source://ruby_event_store/2.5.1/lib/ruby_event_store/constants.rb#4
RubyEventStore::GLOBAL_STREAM = T.let(T.unsafe(nil), Object)

# source://ruby_event_store/2.5.1/lib/ruby_event_store/constants.rb#5
RubyEventStore::PAGE_SIZE = T.let(T.unsafe(nil), Integer)

# source://ruby_event_store/2.5.1/lib/ruby_event_store/constants.rb#6
RubyEventStore::TIMESTAMP_PRECISION = T.let(T.unsafe(nil), Integer)

# source://ruby_event_store/2.5.1/lib/ruby_event_store/version.rb#4
RubyEventStore::VERSION = T.let(T.unsafe(nil), String)
